/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.15
 * Generated at: 2017-10-11 20:58:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ajuda_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html class=\"no-js\" lang=\"en\" dir=\"ltr\">\n");

	String caminho = request.getContextPath();

      out.write("\n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Tutoria</title>\n");
      out.write("\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.datatables.net/r/zf-5.5.2/jqc-1.11.3,dt-1.10.8/datatables.min.css\"/>\n");
      out.write("    <script type=\"text/javascript\" src=\"https://cdn.datatables.net/r/zf-5.5.2/jqc-1.11.3,dt-1.10.8/datatables.min.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" charset=\"utf-8\">\n");
      out.write("\t$(document).ready(function() {\n");
      out.write("            $('#example').dataTable();\n");
      out.write("\t} );\n");
      out.write("    </script>\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(caminho);
      out.write("/css/foundation.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(caminho);
      out.write("/css/app.css\">\n");
      out.write("\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("\n");
      out.write("    <div class=\"off-canvas-wrapper\">\n");
      out.write("      <div class=\"off-canvas-wrapper-inner\" data-off-canvas-wrapper> <!-- Essa div e a de cima servem para fazer a parte do menu lateral -->\n");
      out.write("\n");
      out.write("          ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("#{caminho}/includes/menu.jsp", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), out, false);
      out.write("\n");
      out.write("\n");
      out.write("          <!-- MAIN SECTION -->\n");
      out.write("          <br />\n");
      out.write("          <h1 style=\"text-align: center;\">Importação dos dados de alunos para a aplicação</h1>\n");
      out.write("          <br />\n");
      out.write("          <div class=\"row\">\n");
      out.write("              <span><p style=\"color: red; font-weight: bold;\">Observação: </p>Antes de importar um arquivo para o sistema,\n");
      out.write("                  lembre-se de apagar o banco de dados com o botão \"Limpar banco de bados\" que está presente na própria página \"Atualizar Dados\".\n");
      out.write("                  Isso se deve ao fato de que poderá ocorrer risco de duplicação de dados de alunos,\n");
      out.write("                  sendo então responsabilidade do usuário.</span>\n");
      out.write("          </div>\n");
      out.write("          <hr />\n");
      out.write("          <div class=\"row\">\n");
      out.write("              <p>Para que a importação dos dados de alunos para a aplicação seja feita de forma correta, siga o modelo do\n");
      out.write("                  template disponível <a href=\"");
      out.print(caminho);
      out.write("/img/ajuda/template_TUTORIA.xlsx\">aqui</a>.\n");
      out.write("                  A primeira linha do arquivo (Figura 1) indica quais informações cada coluna deve conter,\n");
      out.write("                  e esta <b>não</b> deve ser apagada. Cada linha indica as informações de um aluno e,\n");
      out.write("                  em caso de necessidade, <b>não</b> utilize ponto e vírgula (<b>;</b>) para separar partes de textos,\n");
      out.write("                  dê preferência a vírgulas comuns, pois o algoritmo de importação utiliza de pontos e vírgulas\n");
      out.write("                  para a importação do arquivo.</p>\n");
      out.write("          </div>\n");
      out.write("          <br />\n");
      out.write("          <div class=\"row\" style=\"text-align:center;\">\n");
      out.write("             <img src=\"");
      out.print(caminho);
      out.write("/img/ajuda/img1.png\" alt=\"Unioeste\" height=\"400\" width=\"900\">\n");
      out.write("             <p><b>Figura 1</b></p>\n");
      out.write("          </div>\n");
      out.write("          <br />\n");
      out.write("          <div class=\"row\">\n");
      out.write("              <p>A partir deste arquivo em Excel com os dados já inseridos, salve este arquivo para o formato CSV,\n");
      out.write("                  conforme demonstrado nas Figuras 2 e 3 abaixo.</p>\n");
      out.write("          </div>\n");
      out.write("          <br />\n");
      out.write("          <div class=\"row\" style=\"text-align:center;\">\n");
      out.write("\t\t<img src=\"");
      out.print(caminho);
      out.write("/img/ajuda/img2.png\" alt=\"Unioeste\" height=\"400\" width=\"900\">\n");
      out.write("                <p><b>Figura 2</b></p>\n");
      out.write("          </div>\n");
      out.write("          <br />\n");
      out.write("          <div class=\"row\" style=\"text-align:center;\">\n");
      out.write("\t\t<img src=\"");
      out.print(caminho);
      out.write("/img/ajuda/img3.png\" alt=\"Unioeste\" height=\"400\" width=\"900\">\n");
      out.write("                <p><b>Figura 3</b></p>\n");
      out.write("          </div>\n");
      out.write("          <br />\n");
      out.write("          <div class=\"row\">\n");
      out.write("              <p>Após salvar o arquivo no formato CSV, os dados neste arquivo ficarão semelhantes a Figura 4.\n");
      out.write("              Com isso, o arquivo está pronto para ser importado para a aplicação.</p>\n");
      out.write("          </div>\n");
      out.write("          <br />\n");
      out.write("          <div class=\"row\" style=\"text-align:center;\">\n");
      out.write("\t\t<img src=\"");
      out.print(caminho);
      out.write("/img/ajuda/img4.png\" alt=\"Unioeste\" height=\"500\" width=\"900\">\n");
      out.write("                <p><b>Figura 4</b></p>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    <br/>\n");
      out.write("    <br/>\n");
      out.write("    <br/>\n");
      out.write("    <br/>\n");
      out.write("    <br/>\n");
      out.write("    <!--\n");
      out.write("    <script src=\"");
      out.print(caminho);
      out.write("/js/vendor/jquery.js\"></script>\n");
      out.write("    -->\n");
      out.write("    <script src=\"");
      out.print(caminho);
      out.write("/js/vendor/what-input.js\"></script>\n");
      out.write("    <script src=\"");
      out.print(caminho);
      out.write("/js/vendor/foundation.js\"></script>\n");
      out.write("    <script src=\"");
      out.print(caminho);
      out.write("/js/app.js\"></script>\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("\t// For demo to fit into DataTables site builder...\n");
      out.write("\t$('#example')\n");
      out.write("\t\t.removeClass( 'display' )\n");
      out.write("\t\t.addClass('tdisplay');\n");
      out.write("    </script>\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
